DROP TABLE IF EXISTS t1;
SET @@GLOBAL.userstat=ON;
CREATE TABLE t1 (a INT primary key, b int, unique key (b)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1,1);
SET autocommit=1;
SELECT @@global.userstat = 1 AS should_be_1;
should_be_1
1
SELECT VARIABLE_VALUE INTO @innodb_rows_inserted_1 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_inserted';
SELECT VARIABLE_VALUE INTO @innodb_rows_deleted_1 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_deleted';
SELECT VARIABLE_VALUE INTO @innodb_rows_updated_1 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_updated';
SELECT ROWS INTO @table_rows_estimate_1 FROM INFORMATION_SCHEMA.INNODB_TABLE_STATS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
SELECT ROWS_CHANGED INTO @table_rows_changed_1 FROM INFORMATION_SCHEMA.TABLE_STATISTICS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
SELECT ROWS_CHANGED_X_INDEXES INTO @table_rows_changed_x_indexes_1 FROM INFORMATION_SCHEMA.TABLE_STATISTICS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
SET innodb_fake_changes=1;
# Confirm that duplicate key errors on REPLACE works
REPLACE INTO t1 VALUES (1,1);
ERROR HY000: Got error 131 during COMMIT
REPLACE INTO t1 VALUES (1,2);
ERROR HY000: Got error 131 during COMMIT
# Confirm that duplicate key errors are OK
BEGIN;
REPLACE INTO t1 VALUES (1,2);
SELECT * from t1;
a	b
1	1
REPLACE INTO t1 VALUES (1,1);
SELECT * from t1;
a	b
1	1
ROLLBACK;
BEGIN;
REPLACE INTO t1 VALUES (2,1);
ERROR 23000: Duplicate entry '1' for key 'b'
INSERT INTO t1 VALUES (1,1);
ERROR 23000: Duplicate entry '1' for key 'PRIMARY'
INSERT INTO t1 VALUES (1,2);
ERROR 23000: Duplicate entry '1' for key 'PRIMARY'
INSERT INTO t1 VALUES (2,1);
ERROR 23000: Duplicate entry '1' for key 'b'
ROLLBACK;
INSERT INTO t1 VALUES (1,1) ON DUPLICATE KEY UPDATE b=b+10;
ERROR HY000: Got error 131 during COMMIT
INSERT INTO t1 VALUES (1,2) ON DUPLICATE KEY UPDATE b=b+10;
ERROR HY000: Got error 131 during COMMIT
SET innodb_fake_changes=0;
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
SELECT VARIABLE_VALUE INTO @innodb_rows_inserted_2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_inserted';
SELECT VARIABLE_VALUE INTO @innodb_rows_deleted_2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME='Innodb_rows_deleted';
SELECT VARIABLE_VALUE INTO @innodb_rows_updated_2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME='Innodb_rows_updated';
SELECT ROWS INTO @table_rows_estimate_2 FROM INFORMATION_SCHEMA.INNODB_TABLE_STATS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
SELECT ROWS_CHANGED INTO @table_rows_changed_2 FROM INFORMATION_SCHEMA.TABLE_STATISTICS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
SELECT ROWS_CHANGED_X_INDEXES INTO @table_rows_changed_x_indexes_2 FROM INFORMATION_SCHEMA.TABLE_STATISTICS WHERE TABLE_SCHEMA LIKE 'test' AND TABLE_NAME LIKE 't1';
should_be_1
1
SELECT @innodb_rows_inserted_2 - @innodb_rows_inserted_1 AS should_be_0;
should_be_0
0
SELECT @innodb_rows_deleted_2 - @innodb_rows_deleted_1 AS should_be_0;
should_be_0
0
SELECT @innodb_rows_updated_2 - @innodb_rows_updated_1 AS should_be_0;
should_be_0
0
SELECT @table_rows_estimate_2 - @table_rows_estimate_1 AS should_be_0;
should_be_0
0
SELECT @table_rows_changed_2 - @table_rows_changed_1 AS should_be_0;
should_be_0
0
SELECT @table_rows_changed_x_indexes_2 - @table_rows_changed_x_indexes_1 AS should_be_0;
should_be_0
0
DROP TABLE t1;
SET @@GLOBAL.userstat=default;
